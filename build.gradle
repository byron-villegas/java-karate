import groovy.json.JsonOutput

plugins {
    id 'java'
    id 'groovy'
}

group = 'cl.villegas'
version = '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Junit
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.7.2'

    // Karate
    testImplementation 'com.intuit.karate:karate-junit4:1.3.1'
}

test {
    useJUnitPlatform()
}

tasks.register('generateBuildJsonFile') {
    def projectInformation = String.format('"name":"%s", "group":"%s", "version":"%s"', project.name, project.group, project.version)
    def javaFormat = String.format('"java": {"source":"%s","target":"%s"}', sourceCompatibility, targetCompatibility)
    def dependencies = '"dependencies": ['
    def json = '{' + projectInformation + ',' + javaFormat + ',' + dependencies
    def i = 0

    configurations.testRuntimeClasspath.resolvedConfiguration.resolvedArtifacts.each { artifact ->
        i++
        json += JsonOutput.toJson(artifact.moduleVersion.id)

        if (i < configurations.testRuntimeClasspath.resolvedConfiguration.resolvedArtifacts.size()) {
            json += ","
        }
    }

    json += "]}"
    json = JsonOutput.prettyPrint(json)
    new File(projectDir, buildscript.sourceFile.name.replace('gradle', 'json')).text = json
}

build.dependsOn generateBuildJsonFile